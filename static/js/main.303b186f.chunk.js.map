{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CircularProgress","apiUrl","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","preventDefault","fetchedData","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.303b186f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid, CircularProgress} from '@material-ui/core';\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\n\nconst Cards = ({data :{ confirmed,recovered, deaths, lastUpdate } }) => {\n    if (!confirmed) {\n      return  <CircularProgress color=\"secondary\" />\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\" >\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)} >\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start = {0} end = {confirmed.value} duration = {1} separator = \",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>                        \n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)} >\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start = {0} end = {recovered.value} duration = {1} separator = \",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>                        \n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)} >\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start = {0} end = {deaths.value} duration = {1} separator = \",\" />    \n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>                        \n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst apiUrl = 'https://covid19.mathdro.id/api';\n\n\nexport const fetchData = async (country) => {\n    const changeableUrl = country ? `${apiUrl}/countries/${country}` : apiUrl;\n    try {\n        const {data :{ confirmed,recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        }\n    }\n    catch(error) {\n        console.log(error)\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try{\n        const {data} = await axios.get(`${apiUrl}/daily`);\n        const modifiedData = data.map((dailyData)=> ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n\n        return modifiedData;\n\n    }catch(error) {\n        console.log(error);\n    }\n}\n\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries}} = await axios.get(`${apiUrl}/countries`);\n        return countries.map(country => country.name);\n    }\n    catch (error) {\n        console.log(error);\n    }\n}","import React , {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState({});\n    \n    useEffect( ()=> {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    },[setDailyData]);\n\n    console.log(`daily data: `);\n    console.log(dailyData);\n\n\n    const lineChart = ( \n        dailyData.length \n        ? (\n            <Line \n                data = {{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets : [\n                        {\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'infected',\n                            borderColor: '#3333ff',\n                            fill: true\n                        },\n                        {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                            fill: true\n                        }\n                    ],\n                }}\n            />\n         ) : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar \n                    data = {{\n                        labels: ['Infected','Recovered','Deaths'],\n                        datasets: [\n                            {\n                                label: 'People',\n                                backgroundColor: [\n                                    'rgba(0,0,255,0.5)',\n                                    'rgba(0,255,0,0.5)',\n                                    'rgba(255,0,0,0.5)'\n                                ],\n                                data: [confirmed.value,recovered.value, deaths.value]\n                            }\n                        ]\n                    }}\n                    options = {{\n                        legend: {display:true},\n                        title: {display: true, text: `${country}`}\n                    }}\n                />\n\n            ) : null \n    );\n\n    return (\n        <div className = {styles.container}>\n           { country ? barChart :  lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\n\n\nimport {fetchCountries} from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    },[setFetchedCountries]);\n\n\n    console.log(`fetchedCountries: `)\n    console.log(fetchedCountries);\n\n    return (\n        <FormControl className = {styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e,e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map( (country,i) => <option key={i} value={country}>{country}</option>)};\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n\n    state = {\n        data : {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        console.log(fetchedData);\n        this.setState({\n            data : fetchedData\n        })\n    }\n\n    handleCountryChange = async (e,country) => {\n        e.preventDefault();\n        console.log(country);\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country});\n    } \n\n    render() {\n        const {data, country} = this.state;\n        return (\n            <div className = {styles.container}>\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\n                <Cards  data={data}/>\n                <CountryPicker handleCountryChange = {this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}